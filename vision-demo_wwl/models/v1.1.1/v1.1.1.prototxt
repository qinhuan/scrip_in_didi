name: "kitti_128x512_vgg16-channel16-nopooling12_deploy"
input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 128
  dim: 512
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "conv1_2"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
######### Split line(SSD)
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "fc6_conv"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 6
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 6
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6_conv"
  top: "fc6_conv"
}
layer {
  name: "fc7_conv"
  type: "Convolution"
  bottom: "fc6_conv"
  top: "fc7_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7_conv"
  top: "fc7_conv"
}
layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "fc7_conv"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_1_relu"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
}
layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "conv6_1"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_relu"
  type: "ReLU"
  bottom: "conv6_2"
  top: "conv6_2"
}
layer {
  name: "conv7_1"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv7_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_1_relu"
  type: "ReLU"
  bottom: "conv7_1"
  top: "conv7_1"
}
layer {
  name: "conv7_2"
  type: "Convolution"
  bottom: "conv7_1"
  top: "conv7_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_relu"
  type: "ReLU"
  bottom: "conv7_2"
  top: "conv7_2"
}
layer {
  name: "conv8_1"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv8_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_1_relu"
  type: "ReLU"
  bottom: "conv8_1"
  top: "conv8_1"
}
layer {
  name: "conv8_2"
  type: "Convolution"
  bottom: "conv8_1"
  top: "conv8_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_2_relu"
  type: "ReLU"
  bottom: "conv8_2"
  top: "conv8_2"
}
layer {
  name: "pool6"
  type: "Pooling"
  bottom: "conv8_2"
  top: "pool6"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "conv4_3_norm"
  type: "Normalize"
  bottom: "conv4_3"
  top: "conv4_3_norm"
  norm_param {
    across_spatial: false
    scale_filler {
      type: "constant"
      value: 20
    }
    channel_shared: false
  }
}
layer {
  name: "conv4_3_norm_mbox_loc_conf"
  type: "Convolution"
  bottom: "conv4_3_norm"
  top: "conv4_3_norm_mbox_loc_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv4_3_norm_mbox_loc_conf_perm"
  type: "Permute"
  bottom: "conv4_3_norm_mbox_loc_conf"
  top: "conv4_3_norm_mbox_loc_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv4_3_norm_mbox_loc_perm"
  type: "Slice"
  bottom: "conv4_3_norm_mbox_loc_conf_perm"
  top: "conv4_3_norm_mbox_loc_perm"
  top: "conv4_3_norm_mbox_conf_perm"
  slice_param {
    slice_point: 24
    axis: 3
  }
}
layer {
  name: "conv4_3_norm_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv4_3_norm_mbox_loc_perm"
  top: "conv4_3_norm_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv4_3_norm_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv4_3_norm_mbox_conf_perm"
  top: "conv4_3_norm_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv4_3_norm_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv4_3_norm"
  bottom: "data"
  top: "conv4_3_norm_mbox_priorbox"
  prior_box_param {
    min_size: 7.68
    max_size: 25.6
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    offset: 0.5
  }
}
layer {
  name: "fc7_conv_mbox_loc_conf"
  type: "Convolution"
  bottom: "fc7_conv"
  top: "fc7_conv_mbox_loc_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "fc7_conv_mbox_loc_conf_perm"
  type: "Permute"
  bottom: "fc7_conv_mbox_loc_conf"
  top: "fc7_conv_mbox_loc_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "fc7_conv_mbox_loc_perm"
  type: "Slice"
  bottom: "fc7_conv_mbox_loc_conf_perm"
  top: "fc7_conv_mbox_loc_perm"
  top: "fc7_conv_mbox_conf_perm"
  slice_param {
    slice_point: 24
    axis: 3
  }
}
layer {
  name: "fc7_conv_mbox_loc_flat"
  type: "Flatten"
  bottom: "fc7_conv_mbox_loc_perm"
  top: "fc7_conv_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "fc7_conv_mbox_conf_flat"
  type: "Flatten"
  bottom: "fc7_conv_mbox_conf_perm"
  top: "fc7_conv_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "fc7_conv_mbox_priorbox"
  type: "PriorBox"
  bottom: "fc7_conv"
  bottom: "data"
  top: "fc7_conv_mbox_priorbox"
  prior_box_param {
    min_size: 25.6
    max_size: 79.36
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    offset: 0.5
  }
}
layer {
  name: "conv6_2_mbox_loc_conf"
  type: "Convolution"
  bottom: "conv6_2"
  top: "conv6_2_mbox_loc_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv6_2_mbox_loc_conf_perm"
  type: "Permute"
  bottom: "conv6_2_mbox_loc_conf"
  top: "conv6_2_mbox_loc_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv6_2_mbox_loc_perm"
  type: "Slice"
  bottom: "conv6_2_mbox_loc_conf_perm"
  top: "conv6_2_mbox_loc_perm"
  top: "conv6_2_mbox_conf_perm"
  slice_param {
    slice_point: 24
    axis: 3
  }
}
layer {
  name: "conv6_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv6_2_mbox_loc_perm"
  top: "conv6_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv6_2_mbox_conf_perm"
  top: "conv6_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv6_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv6_2"
  bottom: "data"
  top: "conv6_2_mbox_priorbox"
  prior_box_param {
    min_size: 79.36
    max_size: 133.12
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    offset: 0.5
  }
}
layer {
  name: "conv7_2_mbox_loc_conf"
  type: "Convolution"
  bottom: "conv7_2"
  top: "conv7_2_mbox_loc_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv7_2_mbox_loc_conf_perm"
  type: "Permute"
  bottom: "conv7_2_mbox_loc_conf"
  top: "conv7_2_mbox_loc_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv7_2_mbox_loc_perm"
  type: "Slice"
  bottom: "conv7_2_mbox_loc_conf_perm"
  top: "conv7_2_mbox_loc_perm"
  top: "conv7_2_mbox_conf_perm"
  slice_param {
    slice_point: 24
    axis: 3
  }
}
layer {
  name: "conv7_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv7_2_mbox_loc_perm"
  top: "conv7_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv7_2_mbox_conf_perm"
  top: "conv7_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv7_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv7_2"
  bottom: "data"
  top: "conv7_2_mbox_priorbox"
  prior_box_param {
    min_size: 133.12
    max_size: 186.88
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    offset: 0.5
  }
}
layer {
  name: "conv8_2_mbox_loc_conf"
  type: "Convolution"
  bottom: "conv8_2"
  top: "conv8_2_mbox_loc_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_2_mbox_loc_conf_perm"
  type: "Permute"
  bottom: "conv8_2_mbox_loc_conf"
  top: "conv8_2_mbox_loc_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv8_2_mbox_loc_perm"
  type: "Slice"
  bottom: "conv8_2_mbox_loc_conf_perm"
  top: "conv8_2_mbox_loc_perm"
  top: "conv8_2_mbox_conf_perm"
  slice_param {
    slice_point: 24
    axis: 3
  }
}
layer {
  name: "conv8_2_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv8_2_mbox_loc_perm"
  top: "conv8_2_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_2_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv8_2_mbox_conf_perm"
  top: "conv8_2_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_2_mbox_priorbox"
  type: "PriorBox"
  bottom: "conv8_2"
  bottom: "data"
  top: "conv8_2_mbox_priorbox"
  prior_box_param {
    min_size: 186.88
    max_size: 240.64
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    offset: 0.5
  }
}
layer {
  name: "pool6_mbox_loc_conf"
  type: "Convolution"
  bottom: "pool6"
  top: "pool6_mbox_loc_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 60
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool6_mbox_loc_conf_perm"
  type: "Permute"
  bottom: "pool6_mbox_loc_conf"
  top: "pool6_mbox_loc_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "pool6_mbox_loc_perm"
  type: "Slice"
  bottom: "pool6_mbox_loc_conf_perm"
  top: "pool6_mbox_loc_perm"
  top: "pool6_mbox_conf_perm"
  slice_param {
    slice_point: 24
    axis: 3
  }
}
layer {
  name: "pool6_mbox_loc_flat"
  type: "Flatten"
  bottom: "pool6_mbox_loc_perm"
  top: "pool6_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "pool6_mbox_conf_flat"
  type: "Flatten"
  bottom: "pool6_mbox_conf_perm"
  top: "pool6_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "pool6_mbox_priorbox"
  type: "PriorBox"
  bottom: "pool6"
  bottom: "data"
  top: "pool6_mbox_priorbox"
  prior_box_param {
    min_size: 240.64
    max_size: 294.4
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: true
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    offset: 0.5
  }
}
layer {
  name: "mbox_loc"
  type: "Concat"
  bottom: "conv4_3_norm_mbox_loc_flat"
  bottom: "fc7_conv_mbox_loc_flat"
  bottom: "conv6_2_mbox_loc_flat"
  bottom: "conv7_2_mbox_loc_flat"
  bottom: "conv8_2_mbox_loc_flat"
  bottom: "pool6_mbox_loc_flat"
  top: "mbox_loc"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_conf"
  type: "Concat"
  bottom: "conv4_3_norm_mbox_conf_flat"
  bottom: "fc7_conv_mbox_conf_flat"
  bottom: "conv6_2_mbox_conf_flat"
  bottom: "conv7_2_mbox_conf_flat"
  bottom: "conv8_2_mbox_conf_flat"
  bottom: "pool6_mbox_conf_flat"
  top: "mbox_conf"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_priorbox"
  type: "Concat"
  bottom: "conv4_3_norm_mbox_priorbox"
  bottom: "fc7_conv_mbox_priorbox"
  bottom: "conv6_2_mbox_priorbox"
  bottom: "conv7_2_mbox_priorbox"
  bottom: "conv8_2_mbox_priorbox"
  bottom: "pool6_mbox_priorbox"
  top: "mbox_priorbox"
  concat_param {
    axis: 2
  }
}
layer {
  name: "mbox_conf_reshape"
  type: "Reshape"
  bottom: "mbox_conf"
  top: "mbox_conf_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: -1
      dim: 6
    }
  }
}
layer {
  name: "mbox_conf_softmax"
  type: "Softmax"
  bottom: "mbox_conf_reshape"
  top: "mbox_conf_softmax"
  softmax_param {
    axis: 2
  }
}
layer {
  name: "mbox_conf_flatten"
  type: "Flatten"
  bottom: "mbox_conf_softmax"
  top: "mbox_conf_flatten"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "detection_out"
  type: "DetectionOutput"
  bottom: "mbox_loc"
  bottom: "mbox_conf_flatten"
  bottom: "mbox_priorbox"
  top: "detection_out"
  include {
    phase: TEST
  }
  detection_output_param {
    num_classes: 6
    share_location: true
    background_label_id: 0
    nms_param {
      nms_threshold: 0.3
      top_k: 200
    }
    code_type: CENTER_SIZE
    keep_top_k: 100
    confidence_threshold: 0.01
  }
}
######### Split line(FCN)
layer {
  name: "seg_conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "seg_conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "seg_relu4_1"
  type: "ReLU"
  bottom: "seg_conv4_1"
  top: "seg_conv4_1"
}
layer {
  name: "seg_conv4_2"
  type: "Convolution"
  bottom: "seg_conv4_1"
  top: "seg_conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "seg_relu4_2"
  type: "ReLU"
  bottom: "seg_conv4_2"
  top: "seg_conv4_2"
}
layer {
  name: "seg_conv4_3"
  type: "Convolution"
  bottom: "seg_conv4_2"
  top: "seg_conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "seg_relu4_3"
  type: "ReLU"
  bottom: "seg_conv4_3"
  top: "seg_conv4_3"
}
layer {
  name: "seg_pool4"
  type: "Pooling"
  bottom: "seg_conv4_3"
  top: "seg_pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "seg_conv5_1"
  type: "Convolution"
  bottom: "seg_pool4"
  top: "seg_conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "seg_relu5_1"
  type: "ReLU"
  bottom: "seg_conv5_1"
  top: "seg_conv5_1"
}
layer {
  name: "seg_conv5_2"
  type: "Convolution"
  bottom: "seg_conv5_1"
  top: "seg_conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "seg_relu5_2"
  type: "ReLU"
  bottom: "seg_conv5_2"
  top: "seg_conv5_2"
}
layer {
  name: "seg_conv5_3"
  type: "Convolution"
  bottom: "seg_conv5_2"
  top: "seg_conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "seg_relu5_3"
  type: "ReLU"
  bottom: "seg_conv5_3"
  top: "seg_conv5_3"
}

layer {
  name: "seg_fc6_conv_FCN"
  type: "Convolution"
  bottom: "seg_conv5_3"
  top: "seg_fc6_conv_FCN"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512 #4096
    pad: 3 #0
    kernel_size: 7
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "seg_relu6"
  type: "ReLU"
  bottom: "seg_fc6_conv_FCN"
  top: "seg_fc6_conv_FCN"
}
layer {
  name: "seg_drop6"
  type: "Dropout"
  bottom: "seg_fc6_conv_FCN"
  top: "seg_fc6_conv_FCN"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "seg_fc7_conv_FCN"
  type: "Convolution"
  bottom: "seg_fc6_conv_FCN"
  top: "seg_fc7_conv_FCN"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512 #4096
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "seg_relu7"
  type: "ReLU"
  bottom: "seg_fc7_conv_FCN"
  top: "seg_fc7_conv_FCN"
}
layer {
  name: "seg_drop7"
  type: "Dropout"
  bottom: "seg_fc7_conv_FCN"
  top: "seg_fc7_conv_FCN"
  dropout_param {
    dropout_ratio: 0.5
  }
}

# ########## Pyramid Pooling Module
# if data = (1, 3, 128, 512) => fc7_conv_FCN = (1, 512, 8, 32)
layer {
  name: "seg_fc7_pooldown8"
  type: "Pooling"
  bottom: "seg_fc7_conv_FCN"
  top: "seg_fc7_pooldown8"
  pooling_param {
    pool: AVE
    kernel_size: 8
    stride: 8
  }
} # => (1, 512, 1, 4)
layer {
  name: "seg_fc7_pooldown4"
  type: "Pooling"
  bottom: "seg_fc7_conv_FCN"
  top: "seg_fc7_pooldown4"
  pooling_param {
    pool: AVE
    kernel_size: 4
    stride: 4
  }
} # => (1, 512, 2, 8)
layer {
  name: "seg_fc7_pooldown2"
  type: "Pooling"
  bottom: "seg_fc7_conv_FCN"
  top: "seg_fc7_pooldown2"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
} # => (1, 512, 4, 16)

####################### pool_conv
layer {
  name: "seg_fc7_pooldown8_conv"
  type: "Convolution"
  bottom: "seg_fc7_pooldown8"
  top: "seg_fc7_pooldown8_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "seg_fc7_pooldown8_conv/relu"
  type: "ReLU"
  bottom: "seg_fc7_pooldown8_conv"
  top: "seg_fc7_pooldown8_conv"
}
layer {
  name: "seg_fc7_pooldown8_interp"
  type: "Interp"
  bottom: "seg_fc7_pooldown8_conv"
  top: "seg_fc7_pooldown8_interp"
  interp_param {
    height: 8
    width: 32
  }
}

layer {
  name: "seg_fc7_pooldown4_conv"
  type: "Convolution"
  bottom: "seg_fc7_pooldown4"
  top: "seg_fc7_pooldown4_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "seg_fc7_pooldown4_conv/relu"
  type: "ReLU"
  bottom: "seg_fc7_pooldown4_conv"
  top: "seg_fc7_pooldown4_conv"
}
layer {
  name: "seg_fc7_pooldown4_interp"
  type: "Interp"
  bottom: "seg_fc7_pooldown4_conv"
  top: "seg_fc7_pooldown4_interp"
  interp_param {
    height: 8
    width: 32
  }
}

layer {
  name: "seg_fc7_pooldown2_conv"
  type: "Convolution"
  bottom: "seg_fc7_pooldown2"
  top: "seg_fc7_pooldown2_conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "seg_fc7_pooldown2_conv/relu"
  type: "ReLU"
  bottom: "seg_fc7_pooldown2_conv"
  top: "seg_fc7_pooldown2_conv"
}
layer {
  name: "seg_fc7_pooldown2_interp"
  type: "Interp"
  bottom: "seg_fc7_pooldown2_conv"
  top: "seg_fc7_pooldown2_interp"
  interp_param {
    height: 8
    width: 32
  }
}

############# concat -> conv -> conv -> interp
layer {
  name: "seg_fc7_concat"
  type: "Concat"
  bottom: "seg_fc7_conv_FCN"
  bottom: "seg_fc7_pooldown8_interp"
  bottom: "seg_fc7_pooldown4_interp"
  bottom: "seg_fc7_pooldown2_interp"
  top: "seg_fc7_concat"
  concat_param{
    axis: 1
  }
}

layer {
  name: "seg_fc8_1"
  type: "Convolution"
  bottom: "seg_fc7_concat"
  top: "seg_fc8_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 896
    kernel_size: 3
    stride: 1
    pad: 1
    weight_filler {
      type: "msra"
    }
    bias_term: false
  }
}
layer {
  name: "seg_fc8_1/relu"
  type: "ReLU"
  bottom: "seg_fc8_1"
  top: "seg_fc8_1"
}
layer {
  name: "seg_fc8_1/dropout"
  type: "Dropout"
  bottom: "seg_fc8_1"
  top: "seg_fc8_1"
  dropout_param {
    dropout_ratio: 0.1
  }
}


############ task 11xx
layer {
  name: "seg_fc8_2"
  type: "Convolution"
  bottom: "seg_fc8_1"
  top: "seg_fc8_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 1
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
  }
}
layer {
  name: "seg_fc8_interp"
  type: "Interp"
  bottom: "seg_fc8_2"
  top: "seg_fc8_interp"
  interp_param {
    # zoom_factor: 16
    height: 128
    width: 512
  }
}

layer {
    name: "seg_softmax"
    type: "Softmax"
    bottom: "seg_fc8_interp"
    top: "seg_score"
}

######### Split line(stereo)
layer {
  name: "ste_conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "ste_conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128 
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ste_relu4_1"
  type: "ReLU"
  bottom: "ste_conv4_1"
  top: "ste_conv4_1"
}
layer {
  name: "ste_conv4_2"
  type: "Convolution"
  bottom: "ste_conv4_1"
  top: "ste_conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128 
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ste_relu4_2"
  type: "ReLU"
  bottom: "ste_conv4_2"
  top: "ste_conv4_2"
}
layer {
  name: "ste_conv4_3"
  type: "Convolution"
  bottom: "ste_conv4_2"
  top: "ste_conv4_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128 
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ste_relu4_3"
  type: "ReLU"
  bottom: "ste_conv4_3"
  top: "ste_conv4_3"
}
layer {
  name: "ste_pool4"
  type: "Pooling"
  bottom: "ste_conv4_3"
  top: "ste_pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ste_conv5_1"
  type: "Convolution"
  bottom: "ste_pool4"
  top: "ste_conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128 
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ste_relu5_1"
  type: "ReLU"
  bottom: "ste_conv5_1"
  top: "ste_conv5_1"
}
layer {
  name: "ste_conv5_2"
  type: "Convolution"
  bottom: "ste_conv5_1"
  top: "ste_conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128 
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ste_relu5_2"
  type: "ReLU"
  bottom: "ste_conv5_2"
  top: "ste_conv5_2"
}
layer {
  name: "ste_conv5_3"
  type: "Convolution"
  bottom: "ste_conv5_2"
  top: "ste_conv5_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128 
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ste_relu5_3"
  type: "ReLU"
  bottom: "ste_conv5_3"
  top: "ste_conv5_3"
}
layer {
  name: "ste_pool5"
  type: "Pooling"
  bottom: "ste_conv5_3"
  top: "ste_pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "ste_deconv4"
  type: "Deconvolution"
  bottom: "ste_pool5"
  top: "ste_deconv4"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_deReLU4"
  type: "ReLU"
  bottom: "ste_deconv4"
  top: "ste_deconv4"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "ste_iconv4"
  type: "Convolution"
  bottom: "ste_deconv4"
  top: "ste_iconv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_iReLU4"
  type: "ReLU"
  bottom: "ste_iconv4"
  top: "ste_iconv4"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "ste_deconv3"
  type: "Deconvolution"
  bottom: "ste_iconv4"
  top: "ste_deconv3"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32 
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_deReLU3"
  type: "ReLU"
  bottom: "ste_deconv3"
  top: "ste_deconv3"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "ste_iconv3"
  type: "Convolution"
  bottom: "ste_deconv3"
  top: "ste_iconv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 32 
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_iReLU3"
  type: "ReLU"
  bottom: "ste_iconv3"
  top: "ste_iconv3"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "ste_deconv2"
  type: "Deconvolution"
  bottom: "ste_iconv3"
  top: "ste_deconv2"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 32 
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_deReLU2"
  type: "ReLU"
  bottom: "ste_deconv2"
  top: "ste_deconv2"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "ste_iconv2"
  type: "Convolution"
  bottom: "ste_deconv2"
  top: "ste_iconv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 32 
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_iReLU2"
  type: "ReLU"
  bottom: "ste_iconv2"
  top: "ste_iconv2"
  relu_param {
    negative_slope: 0.1
  }
}
layer {
  name: "ste_deconv1"
  type: "Deconvolution"
  bottom: "ste_iconv2"
  top: "ste_deconv1"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 16 
    pad: 1
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_deReLU1"
  type: "ReLU"
  bottom: "ste_deconv1"
  top: "ste_deconv1"
  relu_param {
    negative_slope: 0.1
  }
}

layer {
  name: "ste_iconv1"
  type: "Convolution"
  bottom: "ste_deconv1"
  top: "ste_iconv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 16 
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ste_disp1"
  type: "Convolution"
  bottom: "ste_iconv1"
  top: "ste_disp1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
